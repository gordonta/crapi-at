{
  "openapi": "3.0.1",
  "info": {
    "title": "OWASP crAPI API",
    "version": "1-oas3"
  },
  "externalDocs": {
    "description": "Completely Ridiculous API (crAPI)",
    "url": "https://github.com/OWASP/crAPI"
  },
  "servers": [
    {
      "url": "https://aigtest-crapi.nnsworkshop.com"
    }
  ],
  "paths": {
    "/identity/api/auth/signup": {
      "post": {
        "operationId": "signup",
        "summary": "Sign up",
        "description": "Used to create an account",
        "tags": ["Identity / Auth"],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "name", "number", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "Cristobal.Weissnat@example.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "Cristobal.Weissnat"
                  },
                  "number": {
                    "type": "string",
                    "example": "6915656974"
                  },
                  "password": {
                    "type": "string",
                    "example": "5hmb0gvyC__hVQg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": "User successfully registered"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/identity/api/auth/login": {
      "post": {
        "operationId": "login",
        "summary": "Login",
        "tags": ["Identity / Auth"],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Test!123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/identity/api/v2/user/change-email": {
      "post": {
        "operationId": "change_email",
        "summary": "Change user email",
        "description": "Sends token to new email",
        "tags": ["Identity / User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["new_email", "old_email"],
                "properties": {
                  "new_email": {
                    "type": "string",
                    "example": "Sofia.Predovic@example.com"
                  },
                  "old_email": {
                    "type": "string",
                    "example": "Cristobal.Weissnat@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/identity/api/v2/user/dashboard": {
      "get": {
        "operationId": "get_dashboard",
        "summary": "Get user dashboard data",
        "tags": ["Identity / User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["available_credit", "email", "id", "name", "number", "picture_url", "role", "video_id", "video_name", "video_url"],
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "available_credit": {
                      "type": "number"
                    },
                    "video_id": {
                      "type": "number"
                    },
                    "video_name": {},
                    "video_url": {},
                    "picture_url": {}
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": "Email not registered"
          }
        }
      },
      "parameters": []
    },
    "/identity/api/v2/vehicle/vehicles": {
      "get": {
        "operationId": "get_vehicles",
        "summary": "Get user vehicles",
        "tags": ["Identity / Vehicle"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["id", "model", "owner", "pincode", "status", "uuid", "vehicleLocation", "vin", "year"],
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "uuid": {
                        "type": "string"
                      },
                      "year": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string"
                      },
                      "vin": {
                        "type": "string"
                      },
                      "pincode": {
                        "type": "string"
                      },
                      "owner": {
                        "$ref": "#/components/schemas/User"
                      },
                      "model": {
                        "type": "object",
                        "required": ["fuel_type", "id", "model", "vehicle_img", "vehiclecompany"],
                        "properties": {
                          "model": {
                            "type": "string"
                          },
                          "fuel_type": {
                            "type": "string"
                          },
                          "vehicle_img": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "vehiclecompany": {
                            "type": "object",
                            "required": ["id", "name"],
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "vehicleLocation": {
                        "type": "object",
                        "required": ["id", "latitude", "longitude"],
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "latitude": {
                            "type": "string"
                          },
                          "longitude": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": []
    },
    "/identity/api/v2/vehicle/{vehicleId}/location": {
      "get": {
        "operationId": "get_location",
        "summary": "Get Vehicle Location",
        "description": "Get user's vehicle location",
        "tags": ["Identity / Vehicle"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["carId", "fullName", "vehicleLocation"],
                  "properties": {
                    "carId": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "vehicleLocation": {
                      "type": "object",
                      "required": ["id", "latitude", "longitude"],
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CRAPIResponse"
                }
              }
            },
            "description": "Invalid vehicle_id for User"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "vehicleId",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "0be319f0-f0dd-44aa-af0b-af927f3a383f"
          }
        }
      ]
    },
    "/community/api/v2/community/posts/{postId}": {
      "get": {
        "operationId": "get_post",
        "summary": "Get Post",
        "description": "Used to get a specific post in the forum",
        "tags": ["Community / Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "postId",
          "required": true,
          "schema": {
            "type": "string",
            "example": "tiSTSUzh4BwtvYSLWPsqu9"
          }
        }
      ]
    },
    "/community/api/v2/community/posts": {
      "post": {
        "operationId": "create_post",
        "summary": "Create Post",
        "description": "Used to create a new post in the forum",
        "tags": ["Community / Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "Est maiores voluptas velit. Necessitatibus vero veniam quos nobis."
                  },
                  "title": {
                    "type": "string",
                    "example": "Velit quia minima."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["CreatedAt", "author", "authorid", "comments", "content", "id", "title"],
                  "properties": {
                    "author": {
                      "type": "object",
                      "required": ["created_at", "nickname", "profile_pic_url"],
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "profile_pic_url": {
                          "type": "string"
                        },
                        "nickname": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "authorid": {
                      "type": "number"
                    },
                    "content": {
                      "type": "string"
                    },
                    "CreatedAt": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/community/api/v2/community/posts/{postId}/comment": {
      "post": {
        "operationId": "post_comment",
        "summary": "Post Comment",
        "description": "Used to add a comment to an existing post in the forum",
        "tags": ["Community / Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "example": "Porro aut ratione et."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["CreatedAt", "author", "authorid", "comments", "content", "id", "title"],
                  "properties": {
                    "author": {
                      "type": "object",
                      "required": ["created_at", "nickname", "profile_pic_url"],
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "profile_pic_url": {
                          "type": "string"
                        },
                        "nickname": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "authorid": {
                      "type": "number"
                    },
                    "content": {
                      "type": "string"
                    },
                    "CreatedAt": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["CreatedAt", "author", "content", "id"],
                        "properties": {
                          "CreatedAt": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "required": ["created_at", "nickname", "profile_pic_url"],
                            "properties": {
                              "created_at": {
                                "type": "string"
                              },
                              "profile_pic_url": {
                                "type": "string"
                              },
                              "nickname": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "postId",
          "required": true,
          "schema": {
            "type": "string",
            "example": "tiSTSUzh4BwtvYSLWPsqu9"
          }
        }
      ]
    },
    "/community/api/v2/community/posts/recent": {
      "get": {
        "operationId": "get_recent_posts",
        "summary": "Get Recent Posts",
        "description": "Used to fetch the most recent posts in the forum.",
        "tags": ["Community / Posts"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "chunked"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Access-Control-Allow-Headers": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization"
                    },
                    "example": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization"
                  }
                }
              },
              "Access-Control-Allow-Methods": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "POST, GET, OPTIONS, PUT, DELETE"
                    },
                    "example": "POST, GET, OPTIONS, PUT, DELETE"
                  }
                }
              },
              "Access-Control-Allow-Origin": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "example": "*"
                    },
                    "example": "*"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  },
                  "description": "Array of forum posts"
                },
                "example": [
                  {
                    "id": "ConZLXacq3MqhbLQDrbNLf",
                    "title": "Title 3",
                    "content": "Hello world 3",
                    "author": {
                      "nickname": "Hacker",
                      "profile_pic_url": "",
                      "created_at": "2021-09-16T01:46:32.432Z"
                    },
                    "comments": [],
                    "authorid": 3,
                    "CreatedAt": "2021-09-16T01:46:32.432Z"
                  },
                  {
                    "id": "rj2md2VVDBjYUGNG6LmQ9e",
                    "title": "Title 2",
                    "content": "Hello world 2",
                    "author": {
                      "nickname": "Victim Two",
                      "profile_pic_url": "",
                      "created_at": "2021-09-16T01:46:32.429Z"
                    },
                    "comments": [],
                    "authorid": 2,
                    "CreatedAt": "2021-09-16T01:46:32.429Z"
                  },
                  {
                    "id": "C68Hgjaow2jieF59LWzqTH",
                    "title": "Title 1",
                    "content": "Hello world 1",
                    "author": {
                      "nickname": "Victim One",
                      "profile_pic_url": "",
                      "created_at": "2021-09-16T01:46:32.413Z"
                    },
                    "comments": [],
                    "authorid": 1,
                    "CreatedAt": "2021-09-16T01:46:32.413Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/workshop/api/shop/products": {
      "parameters": [],
      "get": {
        "operationId": "get_products",
        "summary": "Get Products",
        "description": "Used to get products for the shop",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["credit", "products"],
                  "properties": {
                    "credit": {
                      "type": "number"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      },
                      "description": "Array of products"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "post": {
        "operationId": "add_new_product",
        "summary": "Add A New Product",
        "description": "Used to add the specified product to the product catalog.",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        }
      }
    },
    "/workshop/api/shop/orders": {
      "post": {
        "operationId": "create_order",
        "summary": "Create Order",
        "description": "Used to create a new order for a product in the shop.",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuantity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id", "message", "credit"],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "credit": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Insufficient Balance. Please apply coupons to get more\nbalance!"
                  }
                }
              }
            },
            "description": "Bad Request!"
          }
        }
      }
    },
    "/workshop/api/shop/orders/{order_id}": {
      "get": {
        "operationId": "get_order_byID",
        "summary": "Get Order Based on ID",
        "description": "Used to get the order details for order identified by order_id.",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["orders"],
                  "properties": {
                    "orders": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "You are not allowed to access this resource!'"
                  }
                }
              }
            },
            "description": "Forbidden!"
          }
        }
      }
    },
    "/workshop/api/shop/orders/all": {
      "get": {
        "operationId": "get_orders",
        "summary": "Get Orders",
        "description": "Used to get user's past orders",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["orders"],
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["created_on", "id", "product", "quantity", "status", "user"],
                        "properties": {
                          "quantity": {
                            "type": "number"
                          },
                          "id": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          },
                          "created_on": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "required": ["email", "number"],
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "product": {
                            "type": "object",
                            "required": ["id", "image_url", "name", "price"],
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "image_url": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "price": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "parameters": []
    },
    "/workshop/api/mechanic/": {
      "get": {
        "operationId": "get_mechanics",
        "summary": "Get Mechanics",
        "description": "Used to get all the available mechanics",
        "tags": ["Workshop / Mechanic"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["mechanics"],
                  "properties": {
                    "mechanics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["id", "mechanic_code", "user"],
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "mechanic_code": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "required": ["email", "number"],
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "mechanics": [
                    {
                      "id": 1,
                      "mechanic_code": "TRAC_MECH1",
                      "user": {
                        "email": "mechanic.one@example.com",
                        "number": ""
                      }
                    },
                    {
                      "id": 2,
                      "mechanic_code": "TRAC_MECH2",
                      "user": {
                        "email": "mechanic.two@example.com",
                        "number": ""
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/workshop/api/mechanic/mechanic_report": {
      "get": {
        "operationId": "get_report_byID",
        "summary": "Get Service Report",
        "description": "Used to get the service report specified by the report_id",
        "tags": ["Workshop / Mechanic"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "openresty/1.17.8.2"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 21 Sep 2021 22:33:37 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Allow": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "GET, HEAD, OPTIONS"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Origin, Cookie"
                  }
                }
              },
              "X-Frame-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "SAMEORIGIN"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Service Request",
                  "required": ["id", "mechanic", "vehicle", "problem_details", "status", "created_on"],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "mechanic": {
                      "title": "Mechanic",
                      "required": ["id", "mechanic_code", "user"],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "mechanic_code": {
                          "type": "string"
                        },
                        "user": {
                          "title": "user",
                          "required": ["email", "number"],
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "mechanic_code": "TRAC_MECH1",
                        "user": {
                          "email": "mechanic.one@example.com",
                          "number": "415-654-3212"
                        }
                      }
                    },
                    "vehicle": {
                      "title": "vehicle",
                      "required": ["id", "vin", "owner"],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "vin": {
                          "type": "string"
                        },
                        "owner": {
                          "title": "owner",
                          "required": ["email", "number"],
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 23,
                        "vin": "0FOPP90TFEE927859",
                        "owner": {
                          "email": "victim.one@example.com",
                          "number": "4156895423"
                        }
                      }
                    },
                    "problem_details": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "created_on": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workshop/api/mechanic/service_requests": {
      "get": {
        "operationId": "get_service_requests_for_mechanic",
        "summary": "Get Service Reports for a Mechanic",
        "description": "Fetch all service requests assigned to this specific mechanic.",
        "tags": ["Workshop / Mechanic"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequests"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequests"
                }
              }
            }
          }
        }
      }
    },
    "/workshop/api/mechanic/signup": {
      "post": {
        "operationId": "mechanic_signup",
        "summary": "New Mechanic Signup",
        "description": "Used to register a new mechanic in the workshop.",
        "tags": ["Workshop / Mechanic"],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "number": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "mechanic_code": {
                    "type": "string"
                  }
                },
                "required": ["email", "mechanic_code", "name", "number", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Mechanic created with email: john@workshop.com"
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Mechanic code already exists!'"
                  }
                }
              }
            },
            "description": "Bad Request!"
          }
        }
      }
    },
    "/workshop/api/shop/orders/return_order": {
      "post": {
        "operationId": "return_order",
        "summary": "Return Order",
        "description": "Used to return order specified by the order_id",
        "tags": ["Workshop / Shop"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "order_id",
            "schema": {
              "type": "integer",
              "example": 33
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message", "order", "qr_code_url"],
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    },
                    "qr_code_url": {
                      "type": "string",
                      "format": "url"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "This order has already been returned!"
                  }
                }
              }
            },
            "description": "Bad Request!"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "You are not allowed to access this resource!'"
                  }
                }
              }
            },
            "description": "Forbidden!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "quantity": {
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatusEnum"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["created_on", "id", "product", "user"]
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["email"]
      },
      "NewProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^\\d{0,18}(\\.\\d{0,2})?$"
          },
          "image_url": {
            "type": "string",
            "format": "url"
          }
        },
        "required": ["image_url", "name", "price"]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^\\d{0,18}(\\.\\d{0,2})?$"
          },
          "image_url": {
            "type": "string",
            "format": "url"
          }
        },
        "required": ["id", "image_url", "name", "price"]
      },
      "OrderStatusEnum": {
        "enum": ["delivered", "return pending", "returned"],
        "type": "string"
      },
      "ProductQuantity": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "example": 1
          }
        },
        "required": ["product_id", "quantity"]
      },
      "Post": {
        "title": "Post",
        "required": ["id", "title", "content", "author", "comments", "authorid", "CreatedAt"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "authorid": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedAt": {
            "type": "string"
          }
        },
        "example": {
          "id": "ConZLXacq3MqhbLQDrbNLf",
          "title": "Title 3",
          "content": "Hello world 3",
          "author": {
            "nickname": "Hacker",
            "profile_pic_url": "",
            "created_at": "2021-09-16T01:46:32.432Z"
          },
          "comments": [],
          "authorid": 3,
          "CreatedAt": "2021-09-16T01:46:32.432Z"
        }
      },
      "Author": {
        "title": "Author",
        "required": ["nickname", "profile_pic_url", "created_at"],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "profile_pic_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "example": {
          "nickname": "Hacker",
          "profile_pic_url": "",
          "created_at": "2021-09-16T01:46:32.432Z"
        }
      },
      "VideoForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "videoName": {
            "type": "string"
          },
          "video_url": {
            "type": "string"
          },
          "conversion_params": {
            "type": "string"
          }
        }
      },
      "CRAPIResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OtpForm": {
        "required": ["email", "otp", "password"],
        "type": "object",
        "properties": {
          "otp": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "example": "9969"
          },
          "password": {
            "maxLength": 30,
            "minLength": 5,
            "type": "string",
            "example": "5hmb0gvyC__hVQg"
          },
          "email": {
            "maxLength": 30,
            "minLength": 5,
            "type": "string",
            "example": "Cristobal.Weissnat@example.com"
          }
        }
      },
      "JwtResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["ROLE_UNDEFINED", "ROLE_USER", "ROLE_MECHANIC", "ROLE_ADMIN"]
          }
        }
      },
      "LoginWithEmailToken": {
        "required": ["email", "token"],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 60,
            "minLength": 3,
            "type": "string"
          },
          "token": {
            "maxLength": 60,
            "minLength": 3,
            "type": "string"
          }
        }
      },
      "ProfileVideo": {
        "type": "object",
        "required": ["id", "video_name", "converstion_params", "video", "user"],
        "properties": {
          "id": {
            "type": "number"
          },
          "video_name": {
            "type": "string"
          },
          "conversion_params": {
            "type": "string"
          },
          "video": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "coupon_code": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": ["amount", "coupon_code"]
      },
      "ServiceRequests": {
        "title": "Service Requests",
        "type": "object",
        "required": ["service_requests"],
        "properties": {
          "service_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["created_on", "id", "mechanic", "vehicle"],
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "mechanic": {
                  "type": "object",
                  "required": ["id", "mechanic_code", "user"],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "mechanic_code": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "required": ["email"],
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                "vehicle": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "vin": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["email"]
                    }
                  },
                  "required": ["id", "owner", "vin"]
                },
                "problem_details": {
                  "type": "string"
                },
                "status": {
                  "enum": ["Pending", "Finished"],
                  "type": "string"
                },
                "created_on": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
